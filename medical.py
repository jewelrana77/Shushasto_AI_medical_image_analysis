import os
from PIL import Image as PILImage
from agno.agent import Agent
from agno.models.google import Gemini
from agno.tools.duckduckgo import DuckDuckGoTools
from agno.media import Image as AgnoImage
import streamlit as st

# Set your API Key (Replace with your actual key)
GOOGLE_API_KEY = "AIzaSyBg32ilqafq1F4ObgDDSscWp8q4DT2nv_g"
os.environ["GOOGLE_API_KEY"] = GOOGLE_API_KEY

# Ensure API Key is provided
if not GOOGLE_API_KEY:
    raise ValueError("тЪая╕П Please set your Google API Key in GOOGLE_API_KEY")

# Initialize the Medical Agent
medical_agent = Agent(
    model=Gemini(id="gemini-2.0-flash-exp"),
    tools=[DuckDuckGoTools()],
    markdown=True
)

query = """
рждрзБржорж┐ ржПржХржЬржи ржЕрждрзНржпржирзНржд ржжржХрзНрж╖ ржорзЗржбрж┐ржХрзЗрж▓ ржЗржорзЗржЬрж┐ржВ ржмрж┐рж╢рзЗрж╖ржЬрзНржЮ, рж░рзЗржбрж┐ржУрж▓ржЬрж┐ ржУ ржбрж╛ржпрж╝рж╛ржЧржирж╕рзНржЯрж┐ржХ ржЗржорзЗржЬрж┐ржВ-ржП ржкрж╛рж░ржжрж░рзНрж╢рзАред ржкрзНрж░ржжрждрзНржд ржорзЗржбрж┐ржХрзЗрж▓ ржЫржмрж┐ржЯрж┐ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рзЛ ржПржмржВ ржирж┐ржЪрзЗрж░ ржХрж╛ржарж╛ржорзЛ ржЕржирзБржпрж╛ржпрж╝рзА ржЙрждрзНрждрж░ ржжрж╛ржУ:

### рзз. ржЗржорзЗржЬрзЗрж░ ржзрж░ржи ржУ ржЕржЮрзНржЪрж▓
- ржХрзЛржи ржЗржорзЗржЬрж┐ржВ ржкржжрзНржзрждрж┐ ржмрзНржпржмрж╣рж╛рж░ рж╣ржпрж╝рзЗржЫрзЗ (ржПржХрзНрж╕-рж░рзЗ/ржПржоржЖрж░ржЖржЗ/рж╕рж┐ржЯрж┐/ржЖрж▓рзНржЯрзНрж░рж╛рж╕рж╛ржЙржирзНржб ржЗрждрзНржпрж╛ржжрж┐)ред
- ржХрзЛржи ржЕржЩрзНржЧ ржмрж╛ ржЕржЮрзНржЪрж▓рзЗрж░ ржЫржмрж┐ ржПржЯрж┐ред
- ржЗржорзЗржЬрзЗрж░ ржЧрзБржгржорж╛ржи ржУ ржкрзНрж░ржпрзБржХрзНрждрж┐ржЧржд ржжрж┐ржХ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рзЛред

### рзи. ржкрзНрж░ржзрж╛ржи ржкрж░рзНржпржмрзЗржХрзНрж╖ржг
- ржорзВрж▓ ржжрзГрж╢рзНржпржорж╛ржи ржмрзИрж╢рж┐рж╖рзНржЯрзНржпржЧрзБрж▓рзЛ ржмрж░рзНржгржирж╛ ржХрж░рзЛред
- рж╕ржорзНржнрж╛ржмрзНржп ржЕрж╕рзНржмрж╛ржнрж╛ржмрж┐ржХрждрж╛ ржерж╛ржХрж▓рзЗ ржмрж┐рж╢ржжржнрж╛ржмрзЗ ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рзЛред
- ржкрзНрж░ржпрж╝рзЛржЬржи рж╣рж▓рзЗ ржорж╛ржк ржмрж╛ ржШржирждрзНржм ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рзЛред

### рзй. ржбрж╛ржпрж╝рж╛ржЧржирж╕рзНржЯрж┐ржХ ржорзВрж▓рзНржпрж╛ржпрж╝ржи
- рж╕ржорзНржнрж╛ржмрзНржп ржкрзНрж░ржзрж╛ржи рж░рзЛржЧ ржирж┐рж░рзНржгржпрж╝ ржУ ржЖрждрзНржоржмрж┐рж╢рзНржмрж╛рж╕рзЗрж░ ржорж╛рждрзНрж░рж╛ ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рзЛред
- рж╕ржорзНржнрж╛ржмрзНржп ржЕржирзНржпрж╛ржирзНржп рж░рзЛржЧрзЗрж░ рждрж╛рж▓рж┐ржХрж╛ ржжрж╛ржУ, рж╕ржорзНржнрж╛ржмржирж╛рж░ ржХрзНрж░ржо ржЕржирзБржпрж╛ржпрж╝рзАред
- ржкрзНрж░рждрж┐ржЯрж┐ ржирж┐рж░рзНржгржпрж╝рзЗрж░ ржпрзБржХрзНрждрж┐ рж╕ржВржХрзНрж╖рзЗржкрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзЛред
- ржЬрж░рзБрж░рж┐ ржмрж╛ ржЧрзБрж░рзБрждрж░ ржлрж▓рж╛ржлрж▓ ржерж╛ржХрж▓рзЗ ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржЙрж▓рзНрж▓рзЗржЦ ржХрж░рзЛред

### рзк. рж░рзЛржЧрзА-ржмрж╛ржирзНржзржм ржмрзНржпрж╛ржЦрзНржпрж╛
- рж╕рж╣ржЬ ржнрж╛рж╖рж╛ржпрж╝ ржлрж▓рж╛ржлрж▓ ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░рзЛред
- ржЬржЯрж┐рж▓ ржЪрж┐ржХрж┐рзОрж╕рж╛ ржкрж░рж┐ржнрж╛рж╖рж╛рж░ рж╕рж╣ржЬ ржмрзНржпрж╛ржЦрзНржпрж╛ ржжрж╛ржУред
- ржкрзНрж░рзЯрзЛржЬржирзЗ рждрзБрж▓ржирж╛ржорзВрж▓ржХ ржЙржжрж╛рж╣рж░ржг ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЛред

### рзл. ржЧржмрзЗрж╖ржгрж╛ ржкрзНрж░рзЗржХрзНрж╖рж╛ржкржЯ
- DuckDuckGo рж╕рж╛рж░рзНржЪ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕рж╛ржорзНржкрзНрж░рждрж┐ржХ ржЧржмрзЗрж╖ржгрж╛ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рзЛред
- ржкрзНрж░ржорж┐ржд ржЪрж┐ржХрж┐рзОрж╕рж╛ ржкрзНрж░рзЛржЯрзЛржХрж▓ ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзЛред
- ржмрж┐рж╢рзНрж▓рзЗрж╖ржгржХрзЗ рж╕ржорж░рзНржержи ржХрж░рзЗ ржПржоржи рзитАУрзйржЯрж┐ ржорзВрж▓ рж░рзЗржлрж╛рж░рзЗржирзНрж╕ ржжрж╛ржУред

ржЙрждрзНрждрж░ржЯрж┐ ржЧржаржиржорзВрж▓ржХ ржУ ржЪрж┐ржХрж┐рзОрж╕рж╛-рж╕ржВржХрзНрж░рж╛ржирзНрждржнрж╛ржмрзЗ рж╕ржарж┐ржХ рж╣рждрзЗ рж╣ржмрзЗ, рж╕рзНржкрж╖рзНржЯ markdown ржлрж░ржорзНржпрж╛ржЯрзЗ ржжрж╛ржУред
"""


# Function to analyze medical image
def analyze_medical_image(image_path):
    """ржорзЗржбрж┐ржХрзЗрж▓ ржЗржорзЗржЬ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг"""
    
    # Open and resize image
    image = PILImage.open(image_path)
    width, height = image.size
    aspect_ratio = width / height
    new_width = 500
    new_height = int(new_width / aspect_ratio)
    resized_image = image.resize((new_width, new_height))

    # Save resized image
    temp_path = "temp_resized_image.png"
    resized_image.save(temp_path)

    # Create AgnoImage object
    agno_image = AgnoImage(filepath=temp_path)

    # Run AI analysis
    try:
        response = medical_agent.run(query, images=[agno_image])
        return response.content
    except Exception as e:
        return f"тЪая╕П Analysis error: {e}"
    finally:
        # Clean up temporary file
        os.remove(temp_path)


# Streamlit UI setup
st.set_page_config(page_title="Medical Image Analysis", layout="centered")
st.title("ЁЯй║ Shushasto.AI ржорзЗржбрж┐ржХрзЗрж▓ ржЗржорзЗржЬ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржЯрзБрж▓ ЁЯФм")
st.markdown(
    """
    рж╕рзНржмрж╛ржЧрждржо **Shushasto.AI ржорзЗржбрж┐ржХрзЗрж▓ ржЗржорзЗржЬ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг** ржЯрзБрж▓рзЗ! ЁЯУ╕  
    ржПржЦрж╛ржирзЗ ржЖржкржирж┐ ржПржХрзНрж╕-рж░рзЗ, ржПржоржЖрж░ржЖржЗ, рж╕рж┐ржЯрж┐ рж╕рзНржХрзНржпрж╛ржи, ржмрж╛ ржЖрж▓рзНржЯрзНрж░рж╛рж╕рж╛ржЙржирзНржбрж╕рж╣ ржпрзЗржХрзЛржирзЛ ржЪрж┐ржХрж┐рзОрж╕рж╛-рж╕ржВржХрзНрж░рж╛ржирзНржд ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рждрзЗ ржкрж╛рж░рзЗржиред  
    ржЖржорж╛ржжрзЗрж░ Shushasto.AI-ржЪрж╛рж▓рж┐ржд рж╕рж┐рж╕рзНржЯрзЗржо ржЫржмрж┐ржЯрж┐ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рзЗ ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд ржлрж▓рж╛ржлрж▓, рж╕ржорзНржнрж╛ржмрзНржп рж░рзЛржЧ ржирж┐рж░рзНржгржпрж╝ ржПржмржВ ржЧржмрзЗрж╖ржгрж╛-ржнрж┐рждрзНрждрж┐ржХ ржЕржирзНрждрж░рзНржжрзГрж╖рзНржЯрж┐ ржкрзНрж░ржжрж╛ржи ржХрж░ржмрзЗред  
    ржЪрж▓рзБржи рж╢рзБрж░рзБ ржХрж░рж╛ ржпрж╛ржХ!
    """
)



# Upload image section
st.sidebar.header("ржЖржкржирж╛рж░ ржорзЗржбрж┐ржХрзЗрж▓ ржЗржорзЗржЬ ржЖржкрж▓рзЛржб ржХрж░рзБржи:")
uploaded_file = st.sidebar.file_uploader("ржПржХржЯрж┐ ржорзЗржбрж┐ржХрзЗрж▓ ржЗржорзЗржЬ ржлрж╛ржЗрж▓ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи", type=["jpg", "jpeg", "png", "bmp", "gif"])

# Button to trigger analysis
if uploaded_file is not None:
    # Display the uploaded image in Streamlit
    st.image(uploaded_file, caption="Uploaded Image", use_container_width=True)
    
    if st.sidebar.button("Analyze Image"):
        with st.spinner("ЁЯФН ржЗржорзЗржЬ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ... ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░рзБржиред"):
            # Save the uploaded image to a temporary file
            image_path = f"temp_image.{uploaded_file.type.split('/')[1]}"
            with open(image_path, "wb") as f:
                f.write(uploaded_file.getbuffer())
            
            # Run analysis on the uploaded image
            report = analyze_medical_image(image_path)
            
            # Display the report
            st.subheader("ЁЯУЛ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг ржкрзНрж░рждрж┐ржмрзЗржжржи")
            st.markdown(report, unsafe_allow_html=True)
            
            # Clean up the saved image file
            os.remove(image_path)
else:
    st.warning("тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржмрж┐рж╢рзНрж▓рзЗрж╖ржг рж╢рзБрж░рзБ ржХрж░рждрзЗ ржПржХржЯрж┐ ржорзЗржбрж┐ржХрзЗрж▓ ржЗржорзЗржЬ ржЖржкрж▓рзЛржб ржХрж░рзБржиред")
